// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: serialization/persistence.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package no.elg.infiniteBootleg.protobuf;

@kotlin.jvm.JvmName("-initializechunk")
public inline fun chunk(block: no.elg.infiniteBootleg.protobuf.ChunkKt.Dsl.() -> kotlin.Unit): no.elg.infiniteBootleg.protobuf.ProtoWorld.Chunk =
  no.elg.infiniteBootleg.protobuf.ChunkKt.Dsl._create(no.elg.infiniteBootleg.protobuf.ProtoWorld.Chunk.newBuilder()).apply { block() }._build()
/**
 * Protobuf type `persistence.Chunk`
 */
public object ChunkKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: no.elg.infiniteBootleg.protobuf.ProtoWorld.Chunk.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: no.elg.infiniteBootleg.protobuf.ProtoWorld.Chunk.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): no.elg.infiniteBootleg.protobuf.ProtoWorld.Chunk = _builder.build()

    /**
     * `.persistence.Vector2i position = 1;`
     */
    public var position: no.elg.infiniteBootleg.protobuf.ProtoWorld.Vector2i
      @JvmName("getPosition")
      get() = _builder.getPosition()
      @JvmName("setPosition")
      set(value) {
        _builder.setPosition(value)
      }
    /**
     * `.persistence.Vector2i position = 1;`
     */
    public fun clearPosition() {
      _builder.clearPosition()
    }
    /**
     * `.persistence.Vector2i position = 1;`
     * @return Whether the position field is set.
     */
    public fun hasPosition(): kotlin.Boolean {
      return _builder.hasPosition()
    }

    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class BlocksProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .persistence.Block blocks = 2;`
     */
     public val blocks: com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Block, BlocksProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getBlocksList()
      )
    /**
     * `repeated .persistence.Block blocks = 2;`
     * @param value The blocks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addBlocks")
    public fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Block, BlocksProxy>.add(value: no.elg.infiniteBootleg.protobuf.ProtoWorld.Block) {
      _builder.addBlocks(value)
    }
    /**
     * `repeated .persistence.Block blocks = 2;`
     * @param value The blocks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignBlocks")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Block, BlocksProxy>.plusAssign(value: no.elg.infiniteBootleg.protobuf.ProtoWorld.Block) {
      add(value)
    }
    /**
     * `repeated .persistence.Block blocks = 2;`
     * @param values The blocks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllBlocks")
    public fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Block, BlocksProxy>.addAll(values: kotlin.collections.Iterable<no.elg.infiniteBootleg.protobuf.ProtoWorld.Block>) {
      _builder.addAllBlocks(values)
    }
    /**
     * `repeated .persistence.Block blocks = 2;`
     * @param values The blocks to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllBlocks")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Block, BlocksProxy>.plusAssign(values: kotlin.collections.Iterable<no.elg.infiniteBootleg.protobuf.ProtoWorld.Block>) {
      addAll(values)
    }
    /**
     * `repeated .persistence.Block blocks = 2;`
     * @param index The index to set the value at.
     * @param value The blocks to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setBlocks")
    public operator fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Block, BlocksProxy>.set(index: kotlin.Int, value: no.elg.infiniteBootleg.protobuf.ProtoWorld.Block) {
      _builder.setBlocks(index, value)
    }
    /**
     * `repeated .persistence.Block blocks = 2;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearBlocks")
    public fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Block, BlocksProxy>.clear() {
      _builder.clearBlocks()
    }


    /**
     * An uninstantiable, behaviorless type to represent the field in
     * generics.
     */
    @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
    public class EntitiesProxy private constructor() : com.google.protobuf.kotlin.DslProxy()
    /**
     * `repeated .persistence.Entity entities = 3;`
     */
     public val entities: com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity, EntitiesProxy>
      @kotlin.jvm.JvmSynthetic
      get() = com.google.protobuf.kotlin.DslList(
        _builder.getEntitiesList()
      )
    /**
     * `repeated .persistence.Entity entities = 3;`
     * @param value The entities to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addEntities")
    public fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity, EntitiesProxy>.add(value: no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity) {
      _builder.addEntities(value)
    }
    /**
     * `repeated .persistence.Entity entities = 3;`
     * @param value The entities to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignEntities")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity, EntitiesProxy>.plusAssign(value: no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity) {
      add(value)
    }
    /**
     * `repeated .persistence.Entity entities = 3;`
     * @param values The entities to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("addAllEntities")
    public fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity, EntitiesProxy>.addAll(values: kotlin.collections.Iterable<no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity>) {
      _builder.addAllEntities(values)
    }
    /**
     * `repeated .persistence.Entity entities = 3;`
     * @param values The entities to add.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("plusAssignAllEntities")
    @Suppress("NOTHING_TO_INLINE")
    public inline operator fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity, EntitiesProxy>.plusAssign(values: kotlin.collections.Iterable<no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity>) {
      addAll(values)
    }
    /**
     * `repeated .persistence.Entity entities = 3;`
     * @param index The index to set the value at.
     * @param value The entities to set.
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("setEntities")
    public operator fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity, EntitiesProxy>.set(index: kotlin.Int, value: no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity) {
      _builder.setEntities(index, value)
    }
    /**
     * `repeated .persistence.Entity entities = 3;`
     */
    @kotlin.jvm.JvmSynthetic
    @kotlin.jvm.JvmName("clearEntities")
    public fun com.google.protobuf.kotlin.DslList<no.elg.infiniteBootleg.protobuf.ProtoWorld.Entity, EntitiesProxy>.clear() {
      _builder.clearEntities()
    }

  }
}
@kotlin.jvm.JvmSynthetic
@com.google.errorprone.annotations.CheckReturnValue
public inline fun no.elg.infiniteBootleg.protobuf.ProtoWorld.Chunk.copy(block: no.elg.infiniteBootleg.protobuf.ChunkKt.Dsl.() -> kotlin.Unit): no.elg.infiniteBootleg.protobuf.ProtoWorld.Chunk =
  no.elg.infiniteBootleg.protobuf.ChunkKt.Dsl._create(this.toBuilder()).apply { block() }._build()

public val no.elg.infiniteBootleg.protobuf.ProtoWorld.ChunkOrBuilder.positionOrNull: no.elg.infiniteBootleg.protobuf.ProtoWorld.Vector2i?
  get() = if (hasPosition()) getPosition() else null

