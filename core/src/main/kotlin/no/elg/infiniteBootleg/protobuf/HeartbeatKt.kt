// Generated by the protocol buffer compiler. DO NOT EDIT!
// source: serialization/packets.proto

// Generated files should ignore deprecation warnings
@file:Suppress("DEPRECATION")
package no.elg.infiniteBootleg.protobuf;

@kotlin.jvm.JvmName("-initializeheartbeat")
public inline fun heartbeat(block: no.elg.infiniteBootleg.protobuf.HeartbeatKt.Dsl.() -> kotlin.Unit): no.elg.infiniteBootleg.protobuf.Packets.Heartbeat =
  no.elg.infiniteBootleg.protobuf.HeartbeatKt.Dsl._create(no.elg.infiniteBootleg.protobuf.Packets.Heartbeat.newBuilder()).apply { block() }._build()
/**
 * ```
 * Server send this every so often, client must respond with another heartbeat packet with the same keepAliveId
 * ```
 *
 * Protobuf type `packets.Heartbeat`
 */
public object HeartbeatKt {
  @kotlin.OptIn(com.google.protobuf.kotlin.OnlyForUseByGeneratedProtoCode::class)
  @com.google.protobuf.kotlin.ProtoDslMarker
  public class Dsl private constructor(
    private val _builder: no.elg.infiniteBootleg.protobuf.Packets.Heartbeat.Builder
  ) {
    public companion object {
      @kotlin.jvm.JvmSynthetic
      @kotlin.PublishedApi
      internal fun _create(builder: no.elg.infiniteBootleg.protobuf.Packets.Heartbeat.Builder): Dsl = Dsl(builder)
    }

    @kotlin.jvm.JvmSynthetic
    @kotlin.PublishedApi
    internal fun _build(): no.elg.infiniteBootleg.protobuf.Packets.Heartbeat = _builder.build()

    /**
     * `string keepAliveId = 1;`
     */
    public var keepAliveId: kotlin.String
      @JvmName("getKeepAliveId")
      get() = _builder.getKeepAliveId()
      @JvmName("setKeepAliveId")
      set(value) {
        _builder.setKeepAliveId(value)
      }
    /**
     * `string keepAliveId = 1;`
     */
    public fun clearKeepAliveId() {
      _builder.clearKeepAliveId()
    }
  }
}
@kotlin.jvm.JvmSynthetic
public inline fun no.elg.infiniteBootleg.protobuf.Packets.Heartbeat.copy(block: no.elg.infiniteBootleg.protobuf.HeartbeatKt.Dsl.() -> kotlin.Unit): no.elg.infiniteBootleg.protobuf.Packets.Heartbeat =
  no.elg.infiniteBootleg.protobuf.HeartbeatKt.Dsl._create(this.toBuilder()).apply { block() }._build()

